#ifndef SevenSegmentDrive_h
#define SevenSegmentDrive_h

#include <Adafruit_NeoPixel.h>
#include <Arduino.h>

#define SRC  0
#define MPWM 1

class SevenSegmentDrive {
  public:
    // Constructor untuk WS2811
    SevenSegmentDrive(int dinPin, int enPin, int setPin, int clkPin);
	
	SevenSegmentDrive(int ledPin, int numSegment);

    // Fungsi untuk mengatur mode (SRC atau MPWM)
    void begin();

    // Fungsi untuk menampilkan angka float
    void displayNumber(float num,unsigned char decimal);
	void displayNumber(int num);

    // Fungsi untuk menampilkan string
    void displayString(const char* str);

    // Fungsi untuk mengatur brightness
    void segBright(unsigned char brightness);

	void setOut();
void sendByte(unsigned char _data);

  private:
    // Pin
    int dinPin, enPin, setPin, clkPin;
	bool mode;
	unsigned char neoBright=128;
	
    // Fungsi untuk mengirim byte menggunakan shiftOut (untuk mode SRC)
    
    // Fungsi untuk mengatur output (untuk mode SRC)
    

    // Fungsi untuk menampilkan digit pada NeoPixel (untuk mode MPWM)
    void displayNeo(uint16_t digit, uint8_t position);

    // WS2811 (NeoPixel) related
    Adafruit_NeoPixel* pixels;

    // Tabel heksadesimal untuk setiap digit (0-9)
    const uint8_t sevenSegmentDigits[10] = {
      0b11111100,  // 0 -> a,b,c,e,f,g
      0b01100000,  // 1 -> b,c
      0b11011010,  // 2 -> a,b,g,e,d
      0b11110010,  // 3 -> a,b,c,d,g
      0b01100110,  // 4 -> b,c,f,g
      0b10110110,  // 5 -> a,f,g,c,d
      0b10111110,  // 6 -> a,f,g,e,d,c
      0b11100000,  // 7 -> a,b,c
      0b11111110,  // 8 -> a,b,c,d,e,f,g
      0b11110110   // 9 -> a,b,c,d,f,g,d
    };
	
	// a, b, c, d, e, f, g -> 0b(gfedcba)
	const uint8_t sevenSegmentAlphabet[26] = {
	  0b01110111,  // A
	  0b01111100,  // B (alternatif: bisa juga 0b00111111 untuk angka 8)
	  0b00111001,  // C
	  0b01011110,  // D
	  0b01111001,  // E
	  0b01110001,  // F
	  0b00111101,  // G
	  0b01110110,  // H
	  0b00000110,  // I
	  0b00011110,  // J
	  0b01110101,  // K (alternatif: variasi untuk K)
	  0b00111000,  // L
	  0b00010101,  // M (tidak sempurna, compromise)
	  0b01010100,  // N
	  0b00111111,  // O
	  0b01110011,  // P
	  0b01101011,  // Q
	  0b01010000,  // R
	  0b01101101,  // S
	  0b01111000,  // T
	  0b00111110,  // U
	  0b00111110,  // V (mirip U)
	  0b00011100,  // W (compromise)
	  0b01110110,  // X (mirip H)
	  0b01101110,  // Y
	  0b01011011   // Z
	};

};

#endif
